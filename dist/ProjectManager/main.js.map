{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/animations.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/project/project-service.ts","webpack:///./src/app/project/project.component.html","webpack:///./src/app/project/project.component.scss","webpack:///./src/app/project/project.component.ts","webpack:///./src/app/project/project.module.ts","webpack:///./src/app/project/project.ts","webpack:///./src/app/selective-preloading-strategy.service.ts","webpack:///./src/app/task/addtask/addtask.component.html","webpack:///./src/app/task/addtask/addtask.component.scss","webpack:///./src/app/task/addtask/addtask.component.ts","webpack:///./src/app/task/modal/project-modal/project-modal.component.html","webpack:///./src/app/task/modal/project-modal/project-modal.component.scss","webpack:///./src/app/task/modal/project-modal/project-modal.component.ts","webpack:///./src/app/task/modal/task-modal/task-popup.component.html","webpack:///./src/app/task/modal/task-modal/task-popup.component.scss","webpack:///./src/app/task/modal/task-modal/task-popup.component.ts","webpack:///./src/app/task/model/task-view-model.ts","webpack:///./src/app/task/model/view-task-model.ts","webpack:///./src/app/task/services/task.service.ts","webpack:///./src/app/task/viewtask/viewtask.component.html","webpack:///./src/app/task/viewtask/viewtask.component.scss","webpack:///./src/app/task/viewtask/viewtask.component.ts","webpack:///./src/app/user/Modal/UserModal/user-modal.component.html","webpack:///./src/app/user/Modal/UserModal/user-modal.component.scss","webpack:///./src/app/user/Modal/UserModal/user-modal.component.ts","webpack:///./src/app/user/User.ts","webpack:///./src/app/user/user.component.html","webpack:///./src/app/user/user.component.scss","webpack:///./src/app/user/user.component.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/app/user/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import {\n  trigger, animateChild, group,\n  transition, animate, style, query\n} from '@angular/animations';\n\n\n// Routable animations\nexport const slideInAnimation =\n  trigger('routeAnimation', [\n    transition('heroes <=> hero', [\n      style({ position: 'relative' }),\n      query(':enter, :leave', [\n        style({\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%'\n        })\n      ]),\n      query(':enter', [\n        style({ left: '-100%'})\n      ]),\n      query(':leave', animateChild()),\n      group([\n        query(':leave', [\n          animate('300ms ease-out', style({ left: '100%'}))\n        ]),\n        query(':enter', [\n          animate('300ms ease-out', style({ left: '0%'}))\n        ])\n      ]),\n      query(':enter', animateChild()),\n    ])\n  ]);\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { SelectivePreloadingStrategyService } from './selective-preloading-strategy.service';\nimport { UserComponent } from './user/user.component';\nimport { ProjectComponent } from './project/project.component';\nimport { AddtaskComponent } from './task/addtask/addtask.component';\nimport { ViewtaskComponent } from './task/viewtask/viewtask.component';\nimport { HomeComponent } from './home/home.component';\n\nconst appRoutes: Routes = [\n\n  {\n    path: 'user',\n    component: UserComponent,\n    data: { preload: true }\n\n  },\n  {\n    path: 'home',\n    component: HomeComponent,\n    data: { preload: true }\n\n  },\n  {\n    path: 'project',\n    component: ProjectComponent,\n    data: { preload: true }\n\n  },\n  {\n    path: 'task/view',\n    component: ViewtaskComponent,\n    data: { preload: true }\n  },\n  {\n    path: 'task/:mode',\n    component: AddtaskComponent,\n    data: { preload: true }\n  },\n    \n];\n\n@NgModule({\n  imports: [\n    RouterModule.forRoot(\n      appRoutes,\n      {\n        enableTracing: false, // <-- debugging purposes only\n        preloadingStrategy: SelectivePreloadingStrategyService,\n      }\n    )\n  ],\n  exports: [\n    RouterModule\n  ]\n})\nexport class AppRoutingModule { }\n","module.exports = \"/* a {  \\n\\n    text-decoration: none;\\n    padding: 2%;\\n    margin: 0%\\n\\n  \\n  } */\\n\\n  .navbar-brand\\n  {\\n      color: #2a4a97;\\n      padding-top: 10px !important\\n  }\\n\\n  .navbar-brand>img\\n  {\\n      display: inline !important\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7TUFPTTs7RUFFSjs7TUFFSSxlQUFlO01BQ2YsNEJBQTRCO0dBQy9COztFQUNEOztNQUVJLDBCQUEwQjtHQUM3QiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogYSB7ICBcblxuICAgIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgICBwYWRkaW5nOiAyJTtcbiAgICBtYXJnaW46IDAlXG5cbiAgXG4gIH0gKi9cblxuICAubmF2YmFyLWJyYW5kXG4gIHtcbiAgICAgIGNvbG9yOiAjMmE0YTk3O1xuICAgICAgcGFkZGluZy10b3A6IDEwcHggIWltcG9ydGFudFxuICB9XG4gIC5uYXZiYXItYnJhbmQ+aW1nXG4gIHtcbiAgICAgIGRpc3BsYXk6IGlubGluZSAhaW1wb3J0YW50XG4gIH0iXX0= */\"","module.exports = \"<div class=\\\"navbar navbar-default\\\">\\n  <div class=\\\"container-fluid\\\">\\n    <div class=\\\"navbar-collapse collapse\\\">\\n      <a class=\\\"navbar-brand\\\" routerLink=\\\"/home\\\">\\n        <img style=\\\"width: 32px\\\" src=\\\"../assets/Images/PM_logo1.png\\\">\\n        Project Manager\\n      </a>\\n      <ul class=\\\"nav navbar-nav navbar-left\\\">\\n        <li>\\n          <a routerLink=\\\"/project\\\" routerLinkActive=\\\"active\\\">Add Project</a>\\n        </li>\\n        <li>\\n          <a [routerLink]=\\\"['/task', 'add']\\\" routerLinkActive=\\\"active\\\">Add Task</a>\\n        </li>\\n        <li>\\n          <a routerLink=\\\"/user\\\" routerLinkActive=\\\"active\\\">Add User</a>\\n        </li>\\n        <li>\\n          <a routerLink=\\\"/task/view\\\" routerLinkActive=\\\"active\\\">View Task</a>\\n        </li>\\n      </ul>\\n    </div>\\n  </div>\\n</div>\\n\\n<div class=\\\"container body-content\\\">\\n  <div [@routeAnimation]=\\\"getAnimationData(routerOutlet)\\\">\\n    <router-outlet #routerOutlet=\\\"outlet\\\"></router-outlet>\\n  </div>\\n</div>\"","import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport { slideInAnimation } from './animations';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: 'app.component.html',\n  styleUrls: ['app.component.css'],\n  animations: [ slideInAnimation ]\n})\nexport class AppComponent {\n  getAnimationData(outlet: RouterOutlet) {\n    return outlet && outlet.activatedRouteData && outlet.activatedRouteData['animation'];\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { Router } from '@angular/router';\nimport { AppComponent } from './app.component';\nimport { AppRoutingModule } from './app-routing.module';\nimport { UserModule } from './user/user.module';\nimport { UserService } from './user/user.service';\nimport { ProjectService } from './project/project-service';\nimport { HttpModule } from '@angular/http';\nimport { ProjectModule } from './project/project.module';\nimport { MatButtonModule, MatDialogModule, MatInputModule } from '@angular/material';\nimport { AddtaskComponent } from './task/addtask/addtask.component';\nimport { AddtaskService } from './task/services/task.service';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { ProjectModalComponent } from './task/modal/project-modal/project-modal.component';\nimport { TaskPopupComponent } from './task/modal/task-modal/task-popup.component';\nimport { ViewtaskComponent } from './task/viewtask/viewtask.component';\nimport { UserModalComponent } from './user/Modal/UserModal/user-modal.component';\nimport { APP_BASE_HREF } from '@angular/common';\nimport { HomeComponent } from './home/home.component';\n\n@NgModule({\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    AppRoutingModule,\n    UserModule,\n    ProjectModule,\n    HttpModule,\n    MatDialogModule,\n    MatInputModule,\n    MatButtonModule,\n    NgbModule\n  ],\n  providers: [UserService, ProjectService, AddtaskService, { provide: APP_BASE_HREF, useValue: '/' }],\n  declarations: [\n    AppComponent,\n    UserModalComponent,\n    ProjectModalComponent,\n    AddtaskComponent,\n    TaskPopupComponent,\n    ViewtaskComponent,\n    HomeComponent,\n  ],\n  entryComponents: [\n    UserModalComponent,\n    TaskPopupComponent,\n    ProjectModalComponent,\n    AddtaskComponent,\n    ViewtaskComponent\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n\n  // Diagnostic only: inspect router configuration\n  constructor(router: Router) {\n    // Use a custom replacer to display function names in the route configs\n    // const replacer = (key, value) => (typeof value === 'function') ? value.name : value;\n\n    // console.log('Routes: ', JSON.stringify(router.config, replacer, 2));\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div style=\\\"text-align: center;\\\">\\n      <img src=\\\"../assets/Images/HomePageImage.jpg\\\" style=\\\"width: 50%;\\\">\\n  </div>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Http, Response,RequestOptions,Headers, RequestMethod} from '@angular/http';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { Observable } from 'rxjs/Rx'\nimport {Project} from './project';\nimport { DebugRenderer2 } from '@angular/core/src/view/services';\n\n\n@Injectable()\nexport class ProjectService {\n      baseUrl: string = 'http://localhost/ProjectManagementAPI/api/Project';\n    constructor(private _http: Http) { }\n\n    saveProject(project) {\n      \n      var projectBody = JSON.stringify(project);\n      var headerOptions = new Headers({'Content-Type':'application/json'});\n      var requestOptions = new RequestOptions({headers : headerOptions});\n      return this._http.post(this.baseUrl + '/Create', projectBody, requestOptions);\n      // .map(res => res.json()) // ...and calling .json() on the response to return data\n      // .catch((error:any) => this._errorHandler(error.error)) //...errors if\n      // .subscribe();\n    }\n   \n    getprojects(): Observable<Project[]>{\n     \n     \n      return this._http.get(this.baseUrl + '/GetProjects')\n      .map((data : Response) =>{\n        return data.json() as Project[];\n      }).catch((error:any) => Observable.throw(error.error.json))\n    }\n\n    deleteProject(id: number){      \n       return this._http.delete(this.baseUrl+'/Delete/'+id);\n       //.map(res => res.json());\n    }\n\n    updateProject(project) {\n      //debugger;\n      var userBody = JSON.stringify(project);\n      var headerOptions = new Headers({'Content-Type':'application/json'});\n      var requestOptions = new RequestOptions({headers : headerOptions});\n      return this._http.put(this.baseUrl+'/Update/', userBody, requestOptions);\n      }\n    \n\n    _errorHandler(error:Response){\n      //debugger;\n      console.log(error);\n      return Observable.throw(error || \"Internal server error\");\n    }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div>\\n    <div class=\\\"col-md-1\\\"></div>\\n    <div class=\\\"col-md-9 \\\">\\n      <form (ngSubmit)=\\\"onSubmit(projectForm)\\\" name=\\\"projectForm\\\" #projectForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\n        <input type=\\\"hidden\\\" name=\\\"projectID\\\" #userID=\\\"ngModel\\\" [(ngModel)]=\\\"project.ProjectID\\\">\\n\\n        <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n        'has-danger': projecttitle.invalid && projecttitle.dirty, \\n        'has-success': projecttitle.valid && projecttitle.dirty \\n      }\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"projecttitle\\\">Project:</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" id=\\\"projecttitle\\\" required class=\\\"form-control\\\" [(ngModel)]=\\\"project.ProjectTitle\\\" name=\\\"projecttitle\\\"\\n              #projecttitle=\\\"ngModel\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"projecttitle\\\"></label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"checkbox\\\" id=\\\"chkDate\\\" name=\\\"chkDate\\\" (change)=\\\"onCheckedChange($event)\\\" value=\\\"chkDate\\\" unchecked />\\n            &nbsp;\\n            <label for=\\\"chkDate\\\"> Set start and end date</label>\\n            &nbsp;\\n            <input type=\\\"date\\\" id=\\\"start\\\" name=\\\"start\\\"\\n            [ngModel]=\\\"project.Startdate | date:'yyyy-MM-dd'\\\" \\n            (ngModelChange)=\\\"project.Startdate = $event\\\"\\n            [value]=\\\"project.Startdate | date:'yyyy-MM-dd'\\\"\\n            [disabled]=\\\"!dateDisabled\\\" #start=\\\"ngModel\\\">\\n            &nbsp;\\n            <input type=\\\"date\\\" id=\\\"end\\\" name=\\\"end\\\"\\n            [ngModel]=\\\"project.Enddate | date:'yyyy-MM-dd'\\\" \\n            (ngModelChange)=\\\"project.Enddate = $event\\\"\\n            [value]=\\\"project.Enddate | date:'yyyy-MM-dd'\\\"\\n            [disabled]=\\\"!dateDisabled\\\" #start=\\\"ngModel\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"priority\\\">Priority:</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"range\\\" id=\\\"priority\\\" name=\\\"priority\\\" [(ngModel)]=\\\"project.Priority\\\" min=\\\"0\\\" max=\\\"30\\\" />\\n            {{project.Priority}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"hidden\\\" [(ngModel)]=\\\"this.project.UserID\\\" #userID=\\\"ngModel\\\" name=\\\"hiddenUserID\\\" />\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"priority\\\">Manager:</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"this.project.FirstName\\\" id=\\\"projectmanager\\\" required class=\\\"form-control\\\"\\n                name=\\\"projectmanager\\\" #firstName=\\\"ngModel\\\" disabled />\\n              <span class=\\\"input-group-btn\\\">\\n                <button class=\\\"btn btn-default\\\" type=\\\"button\\\" name=\\\"btnprojectmanager\\\" (click)=\\\"OpenManagerPopup()\\\">Manager</button>\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"priority\\\"></label>\\n          <div class=\\\"col-sm-10\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">{{this.buttonText}}</button>\\n            &nbsp;\\n            <button type=\\\"reset\\\" class=\\\"btn btn-success\\\">Reset</button>\\n          </div>\\n        </div>\\n      </form>\\n     \\n    </div>\\n    <div class=\\\"col-md-1\\\"></div>\\n     <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>Project Title</th>\\n            <th>Start Date</th>\\n            <th>End Date</th>\\n            <th>Priority</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let project of projects\\\">\\n            <td>{{project.ProjectTitle}}</td>\\n            <td>{{project.StartDate |date:\\\"dd/MM/yyyy\\\" }}</td>\\n            <td>{{project.EndDate |date:\\\"dd/MM/yyyy\\\"}}</td>\\n            <td>{{project.Priority}}</td>\\n            <td style=\\\"width: 180px;\\\">\\n                <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                    <button class=\\\"btn btn-success\\\"  (click)=\\\"edit(project)\\\">Edit</button>\\n                    <button class=\\\"btn btn-success\\\" (click)=\\\"delete(project.ProjectID)\\\">Delete</button>\\n                </div>\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n  </div>\\n</div>\\n\"","module.exports = \".ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948;\\n  /* green */ }\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n  /* red */ }\\n\\n.btn-group button {\\n  margin: 0 3px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcHJvamVjdC9DOlxcQWJiYXNcXFByb2plY3RNYW5hZ2VtZW50QVBJXFxQcm9qZWN0TWFuYWdlbWVudF9Bbmd1bGFyL3NyY1xcYXBwXFxwcm9qZWN0XFxwcm9qZWN0LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsK0JBQThCO0VBQUUsV0FBVyxFQUM1Qzs7QUFFRDtFQUNFLCtCQUE4QjtFQUFFLFNBQVMsRUFDMUM7O0FBR0Q7RUFBb0IsY0FBWSxFQUFHIiwiZmlsZSI6InNyYy9hcHAvcHJvamVjdC9wcm9qZWN0LmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5nLXZhbGlkW3JlcXVpcmVkXSwgLm5nLXZhbGlkLnJlcXVpcmVkICB7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgIzQyQTk0ODsgLyogZ3JlZW4gKi9cbn1cblxuLm5nLWludmFsaWQ6bm90KGZvcm0pICB7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXG59XG5cblxuLmJ0bi1ncm91cCBidXR0b24geyBtYXJnaW46MCAzcHg7fSJdfQ== */\"","import { Component, Inject } from '@angular/core';\nimport { Project } from './project';\nimport { OnInit } from '@angular/core';\nimport { ProjectService } from './project-service';\nimport { NgForm } from '@angular/forms';\nimport { Alert } from 'selenium-webdriver';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { User } from '../user/User';\nimport { UserModalComponent } from '../user/Modal/UserModal/user-modal.component';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.scss']\n})\nexport class ProjectComponent implements OnInit {\n  project: Project;\n  projects: Project[];\n  dateDisabled: boolean;\n  buttonText: string;\n  user: User;\n\n  ngOnInit() {\n    this.buttonText = \"Add\";\n    this.project = new Project();\n    this.getProjects();\n  }\n\n  constructor(private projectService: ProjectService, public managerDialog: MatDialog) {\n  }\n\n  OpenManagerPopup(): void {\n\n    const dialogRef = this.managerDialog.open(UserModalComponent, {\n      width: '600px',\n      data: { User: this.user }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.project.FirstName = result.FirstName;\n      this.project.UserID = result.UserID;\n    })\n  }\n\n  onCheckedChange(eve) {\n    if (eve.target.checked) {\n      this.dateDisabled = true\n    }\n    else {\n      this.dateDisabled = false\n    }\n  }\n\n  onSubmit(form: NgForm): void {\n\n    if (this.project.Startdate > this.project.Enddate) {\n      alert('Enddate should  not come before  start date');\n      return;\n    }\n    if (this.project.ProjectID == null) {\n      this.projectService.saveProject(this.project).subscribe(() => { this.getProjects(); });\n    }\n    else {\n      this.projectService.updateProject(this.project).subscribe(() => { this.getProjects(); });\n    }\n    if (form != null) {\n      this.project = new Project();\n      form.reset();\n      this.buttonText = \"Add\";\n    }\n    this.getProjects();\n  }\n\n\n  delete(id: number): void {\n    if (confirm('Are you sure to delete this record') == true) {\n      this.projectService.deleteProject(id).subscribe(() => { this.getProjects(); });\n    }\n\n  }\n\n  edit(selectedproject): void {\n    this.buttonText = \"Update\";\n\n    if (selectedproject) {\n      this.project.ProjectID = selectedproject.ProjectID;\n      this.project.Startdate = selectedproject.StartDate;\n      this.project.Enddate = selectedproject.EndDate;\n      this.project.Priority = selectedproject.Priority;\n      this.project.ProjectTitle = selectedproject.ProjectTitle;\n      this.project.FirstName = selectedproject.FirstName;\n\n    }\n  }\n\n  getProjects() {\n    this.projectService.getprojects().subscribe(x => this.projects = x as Project[]);\n  }\n\n}\n\n","import { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { FormsModule }    from '@angular/forms';\nimport { ProjectComponent }    from './project.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n   \n  ],\n  declarations: [\n    ProjectComponent\n  ]\n})\nexport class ProjectModule {}\n","import { User } from \"../user/User\";\n\nexport class Project {\n  constructor(\n    public Priority?: number,\n    public ProjectTitle?: string,\n    public UserID?: number,\n    public FirstName?: string,\n    public Startdate?: Date,\n    public Enddate?: Date,\n    public ProjectID?: number,\n  ) {\n  }\n}","import { Injectable } from '@angular/core';\nimport { PreloadingStrategy, Route } from '@angular/router';\nimport { Observable, of } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class SelectivePreloadingStrategyService implements PreloadingStrategy {\n  preloadedModules: string[] = [];\n\n  preload(route: Route, load: () => Observable<any>): Observable<any> {\n    if (route.data && route.data['preload']) {\n      // add the route path to the preloaded module array\n      this.preloadedModules.push(route.path);\n\n      // log the route path to the console\n      console.log('Preloaded: ' + route.path);\n\n      return load();\n    } else {\n      return of(null);\n    }\n  }\n}\n","module.exports = \"<div class=\\\"container\\\">\\n  <div>\\n    <div class=\\\"col-md-1\\\"></div>\\n    <div class=\\\"col-md-9 \\\">\\n      <form (ngSubmit)=\\\"onSubmit(taskForm)\\\" name=\\\"taskForm\\\"  #taskForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\n         <!--<input type=\\\"hidden\\\" name=\\\"taskID\\\" #taskID=\\\"ngModel\\\" [(ngModel)]=\\\"viewModel.TaskID\\\">--> \\n\\n        <div class=\\\"form-group\\\">\\n          <!-- <input type=\\\"hidden\\\" [(ngModel)]=\\\"viewModel.ProjectID\\\" #userID=\\\"ngModel\\\" name=\\\"hiddenProjectID\\\" /> -->\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"priority\\\">Project:</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"viewModel.ProjectName\\\" id=\\\"projectName\\\" required class=\\\"form-control\\\"\\n                name=\\\"projectName\\\" disabled />\\n              <span class=\\\"input-group-btn\\\">\\n                <button class=\\\"btn btn-default\\\" type=\\\"button\\\" name=\\\"btnProjectName\\\" (click)=\\\"OpenProjectPopup()\\\">Search</button>\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"task\\\">Task:</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"text\\\" id=\\\"task\\\" required class=\\\"form-control\\\" [(ngModel)]=\\\"viewModel.TaskName\\\" name=\\\"task\\\"\\n              #task=\\\"ngModel\\\" />\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"chkParentTask\\\"></label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"checkbox\\\" id=\\\"chkParentTask\\\" name=\\\"chkParentTask\\\" [(ngModel)]=\\\"viewModel.IsParentTask\\\" checked />\\n            <span>Parent Task?</span>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"priority\\\">Priority:</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <input type=\\\"range\\\" id=\\\"priority\\\" name=\\\"priority\\\" [(ngModel)]=\\\"viewModel.Priority\\\" min=\\\"0\\\" max=\\\"30\\\"\\n              [disabled]=\\\"viewModel.IsParentTask\\\" />\\n            {{viewModel.Priority}}\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <!-- <input type=\\\"hidden\\\" [(ngModel)]=\\\"viewModel.ParentTaskID\\\" #userID=\\\"ngModel\\\" name=\\\"hiddenParentID\\\" /> -->\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"priority\\\">Parent Task:</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"viewModel.ParentTaskName\\\" id=\\\"parentName\\\" required class=\\\"form-control\\\"\\n                name=\\\"parentName\\\" disabled />\\n              <span class=\\\"input-group-btn\\\">\\n                <button class=\\\"btn btn-default\\\" type=\\\"button\\\" name=\\\"btnParentName\\\" (click)=\\\"OpenParentTaskPopup()\\\"\\n                  [disabled]=\\\"viewModel.IsParentTask\\\">Search</button>\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"start\\\">Start Date</label>\\n          <div class=\\\"col-sm-4\\\">\\n            <input type=\\\"date\\\" id=\\\"start\\\" name=\\\"start\\\" [ngModel]=\\\"viewModel.StartDate | date:'yyyy-MM-dd'\\\" [disabled]=\\\"viewModel.IsParentTask\\\"\\n              (ngModelChange)=\\\"viewModel.StartDate = $event\\\" [value]=\\\"viewModel.StartDate | date:'yyyy-MM-dd'\\\" #start=\\\"ngModel\\\">\\n          </div>\\n\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"end\\\">End Date</label>\\n          <div class=\\\"col-sm-4\\\">\\n            <input type=\\\"date\\\" id=\\\"end\\\" name=\\\"end\\\" [ngModel]=\\\"viewModel.EndDate | date:'yyyy-MM-dd'\\\" (ngModelChange)=\\\"viewModel.EndDate = $event\\\"\\n              [value]=\\\"viewModel.EndDate | date:'yyyy-MM-dd'\\\" #end=\\\"ngModel\\\" [disabled]=\\\"viewModel.IsParentTask\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <!-- <input type=\\\"hidden\\\" [(ngModel)]=\\\"viewModel.UserID\\\" #userID=\\\"ngModel\\\" name=\\\"hiddenUserID\\\" /> -->\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"priority\\\">User:</label>\\n          <div class=\\\"col-sm-10\\\">\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"viewModel.UserName\\\" id=\\\"userName\\\" required class=\\\"form-control\\\" name=\\\"userName\\\"\\n                disabled />\\n              <span class=\\\"input-group-btn\\\">\\n                <button class=\\\"btn btn-default\\\" type=\\\"button\\\" name=\\\"btnUserName\\\" (click)=\\\"OpenUserPopup()\\\" [disabled]=\\\"viewModel.IsParentTask\\\">Search</button>\\n                <!-- <button class=\\\"btn btn-default\\\" type=\\\"button\\\" name=\\\"btnUserName\\\" (click)=\\\"Open(content)\\\" >Search</button> -->\\n\\n              </span>\\n            </div>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"control-label col-sm-2\\\" for=\\\"submit\\\"></label>\\n          <div class=\\\"col-sm-10\\\">\\n            <button type=\\\"submit\\\" class=\\\"btn btn-success\\\">Update</button>\\n            &nbsp;\\n            <button type=\\\"reset\\\" class=\\\"btn btn-success\\\">Reset</button>\\n          </div>\\n        </div>\\n      </form>\\n\\n    </div>\\n    <div class=\\\"col-md-1\\\"></div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svYWRkdGFzay9hZGR0YXNrLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, ViewChild, TemplateRef } from '@angular/core';\nimport { AddtaskService } from '../services/task.service';\nimport { NgForm } from '@angular/forms';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { TaskViewModel } from '../model/task-view-model';\nimport { ParentTask } from '../model/parent-task';\nimport { ProjectModalComponent } from '../modal/project-modal/project-modal.component';\nimport { TaskPopupComponent } from '../modal/task-modal/task-popup.component';\nimport { ActivatedRoute } from '@angular/router';\nimport { UserModalComponent } from 'src/app/user/Modal/UserModal/user-modal.component';\n\n@Component({\n  selector: 'app-addtask',\n  templateUrl: './addtask.component.html',\n  styleUrls: ['./addtask.component.scss']\n})\nexport class AddtaskComponent implements OnInit {\n  viewModel: TaskViewModel;\n  parentTasks: ParentTask[];\n  editing: boolean;\n\n  constructor(public addTaskService: AddtaskService, private activeRoute: ActivatedRoute, public taskDialog: MatDialog,\n    public userDialog: MatDialog, public projectDialog: MatDialog) {\n    this.editing = this.activeRoute.snapshot.params[\"mode\"] == \"edit\";\n    \n    if (this.editing) {\n      let id = this.activeRoute.snapshot.params[\"id\"];\n      this.viewModel = new TaskViewModel();\n      this.addTaskService.getTasks().subscribe(x => this.viewModel = x.find(a=> a.TaskID == id));\n    }\n  }\n\n  ngOnInit() {\n    debugger;\n    if(this.viewModel == null)\n    {\n      this.viewModel = new TaskViewModel();\n    }\n    this.getParentTasks();\n  }\n\n  OpenParentTaskPopup(): void {\n    debugger;\n    const dialogRef = this.taskDialog.open(TaskPopupComponent, {\n      width: '600px',\n      data: { ParentTask: this.parentTasks }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      debugger;\n      this.viewModel.ParentTaskID = result.ParentID\n      this.viewModel.ParentTaskName = result.ParentTask;\n    });\n  }\n\n  OpenUserPopup() {\n    debugger;\n    const dialogRef = this.userDialog.open(UserModalComponent, {\n      width: '600px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.viewModel.UserID = result.UserID;\n      this.viewModel.UserName = result.FirstName;\n    })\n  }\n\n  OpenProjectPopup() {\n    const dialogRef = this.projectDialog.open(ProjectModalComponent, {\n      width: '600px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.viewModel.ProjectID = result.ProjectID;\n      this.viewModel.ProjectName = result.ProjectTitle;\n    })\n  }\n  onSubmit(form: NgForm): void {\n    if (this.viewModel.TaskID == null) {\n      this.addTaskService.saveTask(this.viewModel).subscribe(() => { this.getParentTasks(); });\n      this.viewModel = new TaskViewModel();\n    }\n    else {\n      this.addTaskService.updateTask(this.viewModel).subscribe(() => { this.getParentTasks(); });\n    }\n    if (form != null) {\n      this.viewModel = new TaskViewModel();\n      form.reset();\n    }\n    this.getParentTasks();\n  }\n  getParentTasks(): void {\n    debugger;\n    this.addTaskService.getParentTasks().subscribe(x => this.parentTasks = x as ParentTask[]);\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>Select Project</h1>\\n<div mat-dialog-content>\\n  <table class=\\\"table table-bordered\\\">\\n    <thead>\\n      <tr>\\n        <th>Project ID</th>\\n        <th>Project Title</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let project of projects\\\">        \\n        <td>{{project.ProjectID}}</td>\\n        <td>{{project.ProjectTitle}}</td>\\n        <td>\\n          <div class=\\\"col-md-7\\\" style=\\\"text-align: end\\\">\\n            <button mat-button [mat-dialog-close] = \\\"project\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">Add</button>\\n          </div>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svbW9kYWwvcHJvamVjdC1tb2RhbC9wcm9qZWN0LW1vZGFsLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { Project } from 'src/app/project/project';\nimport { ProjectService } from 'src/app/project/project-service';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\n\n@Component({\n  selector: 'app-project-modal',\n  templateUrl: './project-modal.component.html',\n  styleUrls: ['./project-modal.component.scss']\n})\nexport class ProjectModalComponent implements OnInit {\n  project: Project;\n  projects: Project[];\n  constructor(private projectService: ProjectService, public dialogRef: MatDialogRef<ProjectModalComponent>, @Inject(MAT_DIALOG_DATA) public data: 'testDialog') {\n  }\n  onNoClick(): void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.projectService.getprojects().subscribe(x => this.projects = x as Project[]);\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>Select Parent Task</h1>\\n<div mat-dialog-content>\\n  <table class=\\\"table table-bordered\\\">\\n    <thead>\\n      <tr>\\n        <th>Parent ID</th>\\n        <th>Parent Name</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let pt of parentTasks\\\">        \\n        <td>{{pt.ParentID}}</td>\\n        <td>{{pt.ParentTask}}</td>\\n        <td>\\n          <div class=\\\"col-md-7\\\" style=\\\"text-align: end\\\">\\n            <button mat-button [mat-dialog-close] = \\\"pt\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">Add</button>\\n            <!-- (click) = \\\"onselectManager(User)\\\" -->\\n          </div>\\n        </td>\\n        \\n        <!-- <td style=\\\"width: 70px;\\\">\\n          <i class=\\\"glyphicon glyphicon-edit pointer\\\" (click)=\\\"edit(User)\\\" title=\\\"Edit\\\"></i>\\n          <i class=\\\"glyphicon glyphicon-trash pointer\\\" (click)=\\\"delete(User.ProjectID)\\\" title=\\\"Delete\\\"></i>\\n        </td> -->\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svbW9kYWwvdGFzay1tb2RhbC90YXNrLXBvcHVwLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\nimport { ParentTask } from '../../model/parent-task';\nimport { AddtaskService } from '../../services/task.service';\n\n@Component({\n  selector: 'app-task-popup',\n  templateUrl: './task-popup.component.html',\n  styleUrls: ['./task-popup.component.scss']\n})\nexport class TaskPopupComponent implements OnInit {\nparentTask:ParentTask;\nparentTasks : ParentTask[];\n  constructor(private taskService:AddtaskService, public dialogRef : MatDialogRef<TaskPopupComponent>, @Inject(MAT_DIALOG_DATA) public data : 'testDialog' ) { \n  }\n  onNoClick() : void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.taskService.getParentTasks().subscribe(x => this.parentTasks = x as ParentTask[]);\n  }\n}\n","import { Task } from \"./task\";\nimport { User } from \"src/app/user/User\";\n\nexport class TaskViewModel {\n    TaskID?: number\n    TaskName?: string\n    ProjectID?: number\n    ProjectName?: string\n    IsParentTask?: boolean\n    Priority?: number\n    ParentTaskID?: number\n    ParentTaskName?: string\n    StartDate?: Date\n    EndDate?: Date\n    UserID?: number\n    UserName?: string\n    Status?: string\n    constructor() {\n        this.IsParentTask = true;\n    }\n}\n","import { Task } from \"./task\";\nimport { TaskViewModel } from \"./task-view-model\";\n\nexport class ViewTaskModel {\n    ProjectID?: number\n    ProjectName?: string\n    TaskList : TaskViewModel[]\n    SortBy? : string\n    constructor() {\n    }\n}\n","\nimport { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions, Headers, RequestMethod } from '@angular/http';\n///import { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { Observable } from 'rxjs/Rx'\nimport { Task } from '../model/task';\nimport { MatTabLinkBase } from '@angular/material/tabs/typings/tab-nav-bar';\nimport { TaskViewModel } from '../model/task-view-model';\nimport { ParentTask } from '../model/parent-task';\n\n\n@Injectable()\nexport class AddtaskService {\n  baseUrl: string = 'http://localhost:62634/api/Task';\n  constructor(private _http: Http) { }\n\n  saveTask(task) {\n    debugger;\n    var userBody = JSON.stringify(task);\n    var headerOptions = new Headers({ 'Content-Type': 'application/json' });\n    var requestOptions = new RequestOptions({ headers: headerOptions });\n    return this._http.post(this.baseUrl + '/Create', userBody, requestOptions);\n  }\n\n  getParentTasks(): Observable<ParentTask[]> {\ndebugger;\n    return this._http.get('http://localhost:62634/api/Parent/GetParentTasks')\n      .map((data: Response) => {\n        return data.json() as ParentTask[];\n      }).catch((error: any) => Observable.throw(\"Error in x service\"))\n  }\n\n  getTasks(): Observable<TaskViewModel[]> {\n\n    return this._http.get(this.baseUrl + '/GetTasks')\n      .map((data: Response) => {\n        return data.json() as TaskViewModel[];\n      }).catch((error: any) => Observable.throw(\"Error in x service\"))\n  }\n\n  deleteTask(id: number) {\n    debugger;\n    if (confirm('Are you sure to delete this record')) {\n    return this._http.delete(this.baseUrl + '/Delete/' + id);\n    }\n  }\n\n  endTask(task: TaskViewModel) {\n    var userBody = JSON.stringify(task);\n    var headerOptions = new Headers({ 'Content-Type': 'application/json' });\n    var requestOptions = new RequestOptions({ headers: headerOptions });\n    return this._http.post(this.baseUrl + '/EndTask', userBody, requestOptions);\n  }\n\n  updateTask(task) {\n    debugger;\n    var userBody = JSON.stringify(task);\n    var headerOptions = new Headers({ 'Content-Type': 'application/json' });\n    var requestOptions = new RequestOptions({ headers: headerOptions });\n    return this._http.put(this.baseUrl+ '/Update',userBody, requestOptions);\n  }\n\n  _errorHandler(error: Response) {//debugger;\n    console.log(error);\n    return Observable.throw(error || \"Internal server error\");\n  }\n}","module.exports = \"<div class=\\\"container\\\">\\n  <div >\\n    <div class=\\\"col-md-12 \\\">\\n      <!--<form (ngSubmit)=\\\"onSubmit(viewTaskForm)\\\" name=\\\"viewTaskForm\\\" #viewTaskForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\n        <div class=\\\"form-row\\\">\\n          <div class=\\\"form-group col-md-6\\\">\\n            <label class=\\\"control-label col-sm-2\\\" for=\\\"priority\\\">Project:</label>\\n            <div class=\\\"input-group\\\">\\n              <input type=\\\"text\\\" [(ngModel)]=\\\"viewTaskModel.ProjectName\\\" id=\\\"projectName\\\" required class=\\\"form-control\\\"\\n                name=\\\"projectName\\\" disabled />\\n              <span class=\\\"input-group-btn\\\">\\n                <button class=\\\"btn btn-default\\\" type=\\\"submit\\\" name=\\\"btnProjectName\\\" (click)=\\\"OpenProjectPopup()\\\">Search</button>\\n              </span>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group col-md-6\\\">\\n              <label class=\\\"control-label col-sm-4\\\" for=\\\"priority\\\">Sort Task By:</label>\\n            <div class=\\\"btn-group\\\">\\n              <button class=\\\"btn btn-default\\\"  name=\\\"btn1\\\" (click)=\\\"sortTask('StartDate')\\\">Start Date</button>\\n              <button class=\\\"btn btn-default\\\"  name=\\\"btn2\\\" (click)=\\\"sortTask('EndDate')\\\">End Date</button>\\n              <button class=\\\"btn btn-default\\\"  name=\\\"btn1\\\" (click)=\\\"sortTask('Priority')\\\">Priority</button>\\n              <button class=\\\"btn btn-default\\\"  name=\\\"btn2\\\" (click)=\\\"sortTask('Status')\\\">Completed</button>\\n            </div>\\n          </div>\\n        </div>\\n      </form>-->\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-1\\\"> </div>\\n        <div class=\\\"col-md-10\\\">\\n          <table class=\\\"table table-bordered\\\">\\n            <thead>\\n              <tr>\\n                <th>Task</th>\\n                <th>Parent</th>\\n                <th>Priority</th>\\n                <th>Start</th>\\n                <th>End</th>\\n                <th></th>\\n              </tr>\\n            </thead>\\n            <tbody>\\n              <tr *ngFor=\\\"let task of viewTaskModel.TaskList\\\">\\n                <td>{{task.TaskName}}</td>\\n                <td>{{task.ParentTaskName ==\\\"\\\" ?\\\"Parent task not availble\\\" : task.ParentTaskName}}</td>\\n                <td>{{task.Priority}}</td>\\n                <td>{{task.StartDate | date:\\\"dd/MM/yyyy\\\" }}</td>\\n                <td>{{task.EndDate | date:\\\"dd/MM/yyyy\\\" }}</td>\\n                <td style=\\\"width:180px\\\">\\n                  <div class=\\\"btn-group tablegrp\\\" role=\\\"group\\\">\\n                      <button class=\\\"btn btn-success\\\"  style=\\\"margin:0 3px;\\\" [routerLink] =\\\"['/task','edit', {id:task.TaskID}]\\\">Edit</button>\\n                      <!-- <button class=\\\"btn btn-success\\\" style=\\\"margin:0 3px;\\\" (click) = \\\"edit(task.TaskID)\\\">Edit</button> -->\\n                      <button class=\\\"btn btn-success\\\"  style=\\\"margin:0 3px;\\\"  (click)=\\\"endTask(task.TaskID)\\\">End Task</button>\\n                  </div>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n        <div class=\\\"col-md-1\\\"> </div>\\n      </div>\\n  </div>\\n</div>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Rhc2svdmlld3Rhc2svdmlld3Rhc2suY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ViewTaskModel } from '../model/view-task-model';\nimport { Project } from 'src/app/project/project';\nimport { ProjectService } from 'src/app/project/project-service';\nimport { MatDialog } from '@angular/material';\nimport { ProjectModalComponent } from '../modal/project-modal/project-modal.component';\nimport { AddtaskService } from '../services/task.service';\nimport { TaskViewModel } from '../model/task-view-model';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-viewtask',\n  templateUrl: './viewtask.component.html',\n  styleUrls: ['./viewtask.component.scss']\n})\nexport class ViewtaskComponent implements OnInit {\n  viewTaskModel: ViewTaskModel;\n\n  constructor(private taskService: AddtaskService, public projectDialog: MatDialog, private router: Router) { }\n\n  ngOnInit() {\n    this.viewTaskModel = new ViewTaskModel();\n    this.viewTaskModel.TaskList = [];\n    this.getTasks();\n  }\n\n  OpenProjectPopup(): void {\n\n    const dialogRef = this.projectDialog.open(ProjectModalComponent, {\n      width: '600px'\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      this.viewTaskModel.ProjectID = result.ProjectID;\n      this.viewTaskModel.ProjectName = result.ProjectTitle;\n      this.viewTaskModel.TaskList = this.viewTaskModel.TaskList.filter(x => x.ProjectID === result.ProjectID);\n    })\n  }\n\n  getTasks() {\n    debugger;\n    this.taskService.getTasks().subscribe(x => this.viewTaskModel.TaskList = x as TaskViewModel[]);\n  }\n  \n  endTask(taskId: number): void {\n    debugger;\n    this.taskService.deleteTask(taskId).subscribe(() => { this.getTasks(); });\n    //this.taskService.getTasks().subscribe(x => this.viewTaskModel.TaskList = x as TaskViewModel[]);\n  }\n\n  sortTask<T>(propName: keyof TaskViewModel): void {\n    this.viewTaskModel.TaskList.sort((a, b) => {\n      if (propName === \"Status\") {\n        if (a[propName] == \"Completed\")\n          return 1;\n      }\n      else {\n        if (a[propName] < b[propName])\n          return -1;\n        if (a[propName] > b[propName])\n          return 1;\n        return 0;\n      }\n    });\n  }\n}\n","module.exports = \"<h1 mat-dialog-title>Select Manager</h1>\\n<div mat-dialog-content>\\n  <table class=\\\"table table-bordered\\\">\\n    <thead>\\n      <tr>\\n        <th>User ID</th>\\n        <th>First Name</th>\\n        <th>Action</th>\\n      </tr>\\n    </thead>\\n    <tbody>\\n      <tr *ngFor=\\\"let User of users\\\">        \\n        <td>{{User.UserID}}</td>\\n        <td>{{User.FirstName}}</td>\\n        <td>\\n          <div class=\\\"col-md-7\\\" style=\\\"text-align: end\\\">\\n            <button mat-button [mat-dialog-close] = \\\"User\\\" type=\\\"button\\\" class=\\\"btn btn-success\\\">Add</button>\\n          </div>\\n        </td>\\n        \\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvTW9kYWwvVXNlck1vZGFsL3VzZXItbW9kYWwuY29tcG9uZW50LnNjc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\nimport { UserService } from '../../user.service';\nimport { User } from '../../User';\n\n@Component({\n  selector: 'app-user-modal',\n  templateUrl: './user-modal.component.html',\n  styleUrls: ['./user-modal.component.scss']\n})\nexport class UserModalComponent implements OnInit {\n  users : User[]; \n  user : User;\n\n  constructor(private userService:UserService, public dialogRef : MatDialogRef<UserModalComponent>, @Inject(MAT_DIALOG_DATA) public data : 'testDialog' ) { \n  }\n  \n  onNoClick() : void {\n    this.dialogRef.close();\n  }\n\n  ngOnInit() {\n    this.userService.getusers().subscribe(x => this.users = x as User[]);\n  }\n}\n","\nexport class User {\n\n  firstName:string;\n  lastName:string;\n  employeeID: string;\n  userID:number;\n    \n  // constructor(firstName, lastName, employeeID)\n  // {\n  // this.firstName = firstName; \n  // this.lastName = lastName;\n  // this.employeeID = employeeID;\n  // }\n}","module.exports = \"<div>\\n  <div class=\\\"container\\\">\\n    <div>\\n      <form (ngSubmit)=\\\"onSubmit(userForm)\\\" name=\\\"userForm\\\" #userForm=\\\"ngForm\\\" class=\\\"form-horizontal\\\">\\n        <input type=\\\"hidden\\\" name=\\\"userID\\\" #userID=\\\"ngModel\\\" [(ngModel)]=\\\"user.userID\\\">\\n        <div class=\\\"col-md-1\\\"> </div>\\n        <div class=\\\"col-md-10\\\">\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n                        'has-danger': firstName.invalid && firstName.dirty, \\n                        'has-success': firstName.valid && firstName.dirty \\n                      }\\\">\\n            <label class=\\\"control-label col-sm-2\\\" for=\\\"firstName\\\">First Name</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\" text\\\" id=\\\"firstName\\\" required class=\\\"form-control\\\" [(ngModel)]=\\\"user.firstName\\\" name=\\\"firstName\\\"\\n                #firstName=\\\"ngModel\\\" />\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n              'has-danger': lastName.invalid && lastName.dirty, \\n              'has-success': lastName.valid && lastName.dirty \\n            }\\\">\\n            <label class=\\\"control-label col-sm-2\\\" for=\\\"lastName\\\">Last Name</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"lastName\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.lastName\\\" name=\\\"lastName\\\"\\n                required #lastName=\\\"ngModel\\\" />\\n            </div>\\n          </div>\\n\\n          <div class=\\\"form-group\\\" [ngClass]=\\\"{\\n            'has-danger': employeeID.invalid && employeeID.dirty, \\n            'has-success': employeeID.valid && employeeID.dirty \\n          }\\\">\\n            <label class=\\\"control-label col-sm-2\\\" for=\\\"employeeID\\\">Employee ID</label>\\n            <div class=\\\"col-sm-8\\\">\\n              <input type=\\\"text\\\" id=\\\"employeeID\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"user.employeeID\\\" name=\\\"employeeID\\\"\\n                required #employeeID=\\\"ngModel\\\" />\\n            </div>\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <div class=\\\"col-sm-10 pull-right\\\">\\n              <div>\\n                <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!userForm.form.valid\\\">{{operation}}</button>\\n                &nbsp;\\n                <button type=\\\"reset\\\" class=\\\"btn btn-success\\\">Reset</button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-1\\\"></div>\\n      </form>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"row\\\" style=\\\"height:3px\\\"></div>\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-1\\\"> </div>\\n    <div class=\\\"col-md-10\\\">\\n      <table class=\\\"table table-bordered\\\">\\n        <thead>\\n          <tr>\\n            <th>First Name</th>\\n            <th>Last Name</th>\\n            <th>Employee ID</th>\\n            <th></th>\\n          </tr>\\n        </thead>\\n        <tbody>\\n          <tr *ngFor=\\\"let userValue of users\\\">\\n            <td>{{userValue.FirstName}}</td>\\n            <td>{{userValue.LastName}}</td>\\n            <td>{{userValue.EmployeeID}}</td>\\n            <td style=\\\"width:180px\\\">\\n              <div class=\\\"btn-group\\\" role=\\\"group\\\">\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"edit(userValue)\\\">Edit</button>\\n                <button class=\\\"btn btn-success\\\" (click)=\\\"delete(userValue.UserID)\\\">Delete</button>\\n              </div>\\n              <!-- <i class=\\\"glyphicon glyphicon-trash pointer\\\" (click)=\\\"delete(userValue.UserID)\\\" title=\\\"Delete\\\"></i> -->\\n            </td>\\n          </tr>\\n        </tbody>\\n      </table>\\n    </div>\\n    <div class=\\\"col-md-1\\\"> </div>\\n  </div>\\n\"","module.exports = \".ng-valid[required], .ng-valid.required {\\n  border-left: 5px solid #42A948;\\n  /* green */ }\\n\\n.ng-invalid:not(form) {\\n  border-left: 5px solid #a94442;\\n  /* red */ }\\n\\n.btn-group button {\\n  margin: 0 3px; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci9DOlxcQWJiYXNcXFByb2plY3RNYW5hZ2VtZW50QVBJXFxQcm9qZWN0TWFuYWdlbWVudF9Bbmd1bGFyL3NyY1xcYXBwXFx1c2VyXFx1c2VyLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsK0JBQThCO0VBQUUsV0FBVyxFQUM1Qzs7QUFFRDtFQUNFLCtCQUE4QjtFQUFFLFNBQVMsRUFDMUM7O0FBRUQ7RUFBb0IsY0FBWSxFQUFHIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLmNvbXBvbmVudC5zY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm5nLXZhbGlkW3JlcXVpcmVkXSwgLm5nLXZhbGlkLnJlcXVpcmVkICB7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgIzQyQTk0ODsgLyogZ3JlZW4gKi9cbn1cblxuLm5nLWludmFsaWQ6bm90KGZvcm0pICB7XG4gIGJvcmRlci1sZWZ0OiA1cHggc29saWQgI2E5NDQ0MjsgLyogcmVkICovXG59XG4gICAgICAgICAgICAgICBcbi5idG4tZ3JvdXAgYnV0dG9uIHsgbWFyZ2luOjAgM3B4O30iXX0= */\"","import { Component, ChangeDetectorRef } from '@angular/core';\nimport { User } from './User';\nimport { OnInit } from '@angular/core';\nimport { UserService } from './user.service';\nimport { NgForm } from '@angular/forms';\n\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.scss']\n})\nexport class UserComponent implements OnInit {\n\n  user: User;\n  users: User[];\n  operation: string;\n\n  ngOnInit() {\n    this.user = new User();\n    this.getUsers();\n    this.operation = \"Add\";\n  }\n  constructor(private amser: UserService) {\n  }\n\n  getUsers() {\n    return this.amser.getusers().subscribe(u => { this.users = u });\n  }\n  onSubmit(form: NgForm): void {    \n    if (this.user.userID == null) {\n      this.amser.saveUser(this.user).subscribe(() => { this.getUsers(); });\n    }\n    else {\n      this.amser.updateUser(this.user).subscribe(() => { this.getUsers(); });\n    }\n  }\n\n  delete(id: number): void {\n    if (confirm('Are you sure to delete this record')) {\n      this.amser.deleteuser(id).subscribe(() => { this.getUsers(); });\n    }\n  }\n\n  edit(selecteduser): void {\n    if (selecteduser) {\n      this.operation = \"Update\";\n      this.user.firstName = selecteduser.FirstName;\n      this.user.lastName = selecteduser.LastName;\n      this.user.employeeID = selecteduser.EmployeeID;\n      this.user.userID = selecteduser.UserID;\n    }\n  }\n\n  reset():void{\n    this.user = new User();\n  }\n}\n\n","import { NgModule }       from '@angular/core';\nimport { CommonModule }   from '@angular/common';\nimport { FormsModule }    from '@angular/forms';\nimport { UserComponent }    from './user.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule\n   \n  ],\n  declarations: [\n    UserComponent\n   \n  ]\n})\nexport class UserModule {}\n","import { Injectable } from '@angular/core';\nimport { Http, Response, RequestOptions, Headers, RequestMethod } from '@angular/http';\n//import { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/observable/throw';\nimport { Observable } from 'rxjs/Rx'\nimport { User } from './User';\n\n\n@Injectable()\nexport class UserService {\n  baseUrl: string = 'http://localhost:62634/api/User';\n  constructor(private _http: Http) { }\n\n  saveUser(user) {\n    //debugger;\n    var userBody = JSON.stringify(user);\n    var headerOptions = new Headers({ 'Content-Type': 'application/json' });\n    var requestOptions = new RequestOptions({ headers: headerOptions });\n    return this._http.post(this.baseUrl+'/Create', userBody, requestOptions);\n  }\n\n  getusers(): Observable<User[]> {\n    return this._http.get(this.baseUrl + '/GetUsers')\n      .map((data: Response) => {\n        return data.json() as User[];\n      }).catch((error: any) => Observable.throw(\"Error in x service\"))\n  }\n\n  deleteuser(id: number) {\n    return this._http.delete(this.baseUrl + '/Delete/' + id);\n  }\n\n  updateUser(user) {\n    debugger;\n    var userBody = JSON.stringify(user);\n    var headerOptions = new Headers({ 'Content-Type': 'application/json' });\n    var requestOptions = new RequestOptions({ headers: headerOptions });\n    return this._http.put(this.baseUrl + '/Update', userBody, requestOptions);\n\n  }\n\n  _errorHandler(error: Response) {//debugger;\n    console.log(error);\n    return Observable.throw(error || \"Internal server error\");\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}